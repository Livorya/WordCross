@import url('https://fonts.googleapis.com/css2?family=Fredoka:wght@400;600;700&family=Quicksand:wght@400;600;700&family=Lilita+One&display=swap');

:root {
    --incorrect-red-700: #dc2626;

    --hint-800: #897aa7;
    --hint-700: #7331fa;
    --hint-600: #a495c2;
    
    --purple-800: #471980;
    --purple-700: #6b21a8;

    --fuchsia-800: #c026d3;
    --fuchsia-700: #d946ef;
    --fuchsia-600: #e879f9;
    
    --player-pink-800: #be185d;
    --player-pink-700: #ec4899;
    
    --green-800: #16a34a;
    --green-700: #22c55e;
    
    --player-blue-800: #0284c7;
    --player-blue-700: #0ea5e9;

    --orange-800: #e0580f;
    --orange-700: #f97316;

    --yellow-800: #e0aa09;
    --yellow-700: #facc15;
}

body {
    background-color: var(--purple-700);
    font-family: 'Quicksand', Arial, Helvetica, sans-serif;
    color: whitesmoke;
    text-align: center;
    font-size: 1.5rem;   

    display:flex;
    justify-content: center;
    align-items: center;
    flex-direction: column;
}
h1, h2, h3, h4, h5 {
    margin: 0;
}
ul {
    margin: 5px 0px;
    list-style-type: none;
    text-align: left;
    color: var(--incorrect-red-700);
    font-size: 1.1rem;
}

/* The Modal */
.modal {
    display: none; /*none to be hidden by default*/
    position: fixed;
    z-index: 2; /* have to use index 2 because subjectTitle uses index 1 */
    top: 0;
    left: 0;
    /* full screen cover: */
    width: 100%;
    height: 100%;
    /* i love blur :-) */
    backdrop-filter: blur(5px);
    overflow: hidden;
    justify-content: center;
    align-items: center;
}

.modal h1 {
    font-size: 3rem;
    margin: 5px 0px;
}
.modal h4 {
    font-size: 2rem;
    padding-bottom: 10px;
}
#subject-modal-content {
    background-color: var(--purple-800);
    background-color: rgba(59, 13, 90, 0.8);
    border-radius: 50px;
    margin: 0 auto;
    width: 100%;
    max-width: 500px;
}
/* used to separate from .categoryGrid in mediaquery*/
.categoryModalGrid {
    grid-area: categoryGrid;
    display: grid;
    grid-template-columns: repeat(2, 1fr);
    grid-template-rows: repeat(3, 1fr);
}
.stats-container {
    display: flex;
    justify-content: space-evenly;
    gap: 30px;
    margin: 2px 2px;
    padding: 10px 10px;
}
.stat-item {
    text-align: center;
    padding: 10px;
    border: 3px dashed var(--hint-800);
}
.stat-item h2,
.stat-item h3 {
    font-size: 1.2rem;
    margin: 0;
    color: var(--hint-600);
}
.time-display,
.rounds-display {
    font-size: 2rem;
    font-weight: bold;
    display: block;
}
.time-display {
    color: var(--green-700);
}
.rounds-display {
    color: var(--fuchsia-700);
}
.completion-time-container h2 {
    font-size: 1.2rem;
    margin: 0;
    color: var(--hint-600);
}
.time-display {
    font-size: 2rem;
    font-weight: bold;
    color: var(--green-700);
    display: inline-block;
    margin-bottom: 5px;
}
.rounds-container {
    text-align: center;
    margin: 0;
}
.rounds-container h3 {
    font-size: 1.2rem;
    margin: 0;
    color: var(--hint-600);
}
.rounds-display {
    font-size: 2rem;
    font-weight: bold;
    color: var(--fuchsia-700);
}
/* */

.header {
    background-color: var(--purple-800);
    border: 6px dashed var(--fuchsia-800);
    padding: 5px 50px;
    margin-bottom: 20px;
    box-shadow: 3px 4px 0 rgba(0, 0, 0, 0.4);
}

.wordTitle {
    font-family: 'Lilita One';
    font-size: 4.6rem;
    margin: 0;
    margin-bottom: -18px;
}

.associationTitle {
    font-family: 'Lilita One';
    font-size: 2.4rem;
    letter-spacing: 0.05rem;
    margin: 0;
}

#subjectTitle {
    margin: 0 auto;
    margin-bottom: -65px;
    font-family: 'Fredoka', cursive;
    font-size: 2.3rem;
    font-weight: 600;
    background-color: var(--green-700);
    border-radius: 17px;
    padding: 2px 20px;
    box-shadow: 0px 3px 0 rgba(0, 0, 0, 0.4);
    z-index: 1;
}

.gameplayScreen {
    display: grid;
    grid-template-columns: 1fr 3fr 1fr;
    grid-template-rows: 1fr 1fr 0.35fr;
    grid-template-areas: 
    "player1Container gameboardContainer player2Container"
    "player1Container gameboardContainer player2Container"
    "player1Scorefield timer player2Scorefield";

    margin-top: 40px;
}

.player1Container {
    grid-area: player1Container;
    height: 50vh;
    border: 6px dashed var(--player-blue-700);
    background-color: var(--purple-800);
    margin-bottom: 10px;
    box-shadow: 3px 4px 0 rgba(0, 0, 0, 0.4);
    
    overflow-y: auto;
    scrollbar-width: thin;
    scrollbar-color: var(--player-blue-700) var(--purple-700);
    scrollbar-highlight-color: var(--player-blue-800);
}
    .player1ScoreField {
    display: flex;
    flex-direction: column;
    text-align: left;
    padding: 0px 10px;
}

.gameboardContainer {
    grid-area: gameboardContainer;

    border: 6px dashed var(--green-700);
    background-color: var(--purple-800);
    margin: 0px 15px;
    padding-bottom: 5px;
    padding-top: 30px; 
    box-shadow: 3px 4px 0 rgba(0, 0, 0, 0.4);

    display: grid;
    grid-template-rows: repeat(12, 1fr);
    grid-row-gap: 0px;
    padding-left: 30px; /* Centers text by adding 40px spacing on left side */
    letter-spacing: 30px; /* adds 40px of spacing to the right of every letter */
}

.gameboardContainer .row {
    font-weight: 700;
    padding-bottom: 2px;
}

.player2Container {
    grid-area: player2Container;
    
    height: 50vh;
    border: 6px dashed var(--player-pink-700);
    background-color: var(--purple-800);
    margin-bottom: 10px;
    box-shadow: 3px 4px 0 rgba(0, 0, 0, 0.4);

    overflow-y:auto;
    scrollbar-width: thin;
    scrollbar-color: var(--player-pink-700) var(--purple-700);
}
    .player2ScoreField {
        display: flex;
        flex-direction: column;
        text-align: left;
        padding: 0px 10px;
}

.playerInput {
    color: ghostwhite;
    border-radius: 12px;
    font-size: 0.5;
    padding: 10px 10px;
    margin: 5px 0px;
    border: none;
    box-shadow: 0px 2px 0 rgba(0, 0, 0, 0.4);
    transition: background-color 0.3s ease;
}
.playerInput::placeholder {
    font-family: 'Quicksand';
    font-weight: 600;
    color: ghostwhite;
    text-align: center;
}


#player1Input {
    background-color: var(--player-blue-700);
}
#player1Input:hover {
    background-color: var(--player-blue-800);
    transition: 0.3s ease;
}
/* solved it with a compound selector, now !important is not needed */
#player1Input.flash-correct {
    background-color: var(--green-700);
}
#player1Input.flash-incorrect {
    background-color: var(--incorrect-red-700) 
}

#player2Input {
    background-color: var(--player-pink-700);
}
#player2Input:hover {
    background-color: var(--player-pink-800);
    transition: 0.3s ease;
}

#player1Score {
    background-color: var(--purple-800);
    border-radius: 10px;
    padding: 0px 5px;
    font-size: 1.5rem;
}
#player2Score {
    background-color: var(--purple-800);
    border-radius: 10px;
    padding: 0px 5px;
    font-size: 1.5rem;
}

.timer {
    grid-area: timer;
    display: flex;
    justify-content: center;
    align-items: center;
    font-weight: bold;
    margin: 0 auto;
    margin-top:10px;
    height: 50px;
    width: 120px;
    background-color: var(--purple-800);
    border-radius: 17px;
}
    #timer {
        font-size: 2rem;
}

.hint {
    align-self: center;
    font-size: 17px;
    font-weight: 700;
    letter-spacing: 0px;
    margin-right: 5%;
    margin-top: -2%;
    padding-bottom: 5px;
    border-bottom: 1px solid var(--hint-700);
    color: var(--hint-800);
}


/* Setup Screen */
.setupScreenBody {
    background-color: var(--purple-800);
}

.setupScreen {
    display: grid;
    grid-template-columns: 400px 1fr;
    grid-template-rows: 1fr;
    grid-template-areas: 
    "setupPanel categoryGrid";

    max-height: 50vh;
    max-width: 1080px;
    margin: 0 auto;
    padding: 2rem;
}
.setupPanel {
    grid-area: setupPanel;
    background-color: var(--purple-700);
    padding: 1rem 2.5rem;
    display: flex;
    flex-direction: column;
    align-items: center;
    justify-content: center;
    gap: 2rem;
}
    .playerSelection {
        display: flex;
        gap: 1rem;
        width: 100%;
    }
        .playerBtn {
            width: 50%;
            background-color: var(--fuchsia-600);
            color: white;
            padding: 0.75rem 1.5rem;
            border: none;
            border-radius: 50px;
            font-size: 1.8rem;
            font-weight: bold;
            cursor: pointer;
            transition: all 0.2s ease-out;
            box-shadow: 0 4px 0 rgba(0, 0, 0, 0.4);
            font-family: 'Fredoka', cursive;
            white-space: nowrap; /* prevent text from wrapping */
            margin-top: -20px;
        }

            #player1Btn:hover {
                background-color: var(--fuchsia-800);
                transform: translateY(-4px);
                box-shadow: 0 8px 0 rgba(0, 0, 0, 0.4);
            }

                #player1Btn:active {
                    transform: translateY(0);
                    box-shadow: 0 4px 0 rgba(0, 0, 0, 0.4);
                    background-color: var(--fuchsia-700);
                }

                    #player2Btn {
                        cursor:not-allowed;
                    }
                    #player2Btn:active {
                        pointer-events: none;
                    }
                    

.conditionBox {
    border: 6px dashed var(--fuchsia-800);
    padding: 1.5rem;
    background-color: var(--purple-800);
    box-shadow: 0px 6px 0 rgba(0, 0, 0, 0.3);
}

    .conditionBox h2 {
        color: white;
        font-size: 2rem;
        font-weight: bold;
        text-align: center;
        margin-bottom: 1rem;
        font-family: 'Fredoka', cursive;
    }

.orSpan {
    color: white;
    font-weight: bold;
    font-size: 1.5rem;
    margin-top: -30px;
}

.conditionOptions {
    display: flex;
    justify-content: center;
    align-items: center;
    gap: 2rem;
}

.inputWrapper {
    display: flex;
    flex-direction: column;
    align-items: center;
    gap: 0.5rem;
}

    .inputWrapper label {
        color: white;
        font-family: 'Fredoka', cursive;
        font-size: 1.125rem;
    }

.conditionInput {
    background-color: var(--player-pink-700);
    color: white;
    padding: 0.75rem;
    border: none;
    border-radius: 9999px;
    font-size: 1.5rem;
    font-weight: bold;
    cursor: pointer;
    transition: background-color 0.2s ease-out;
    font-family: 'Fredoka', cursive;
    width: 5rem;
    text-align: center;
}

    #roundInput:hover {
        background-color: var(--player-pink-800);
    }
    #pointGoalInput {
        cursor: not-allowed;
        pointer-events: none;
    }

/* Remove input arrows */
    .conditionInput::-webkit-outer-spin-button,
    .conditionInput::-webkit-inner-spin-button {
        -webkit-appearance: none;
        margin: 0;
    }
        /* Remove focus outline and add custom focus style */
        .conditionInput:focus {
            outline: none;
            background-color: var(--player-pink-800);
        }

            .conditionInput:active {
                background-color: var(--player-pink-800);
            }

.startBtn {
    background-color: var(--green-700);
    color: white;
    padding: 1rem 4rem;
    border: none;
    border-radius: 9999px;
    font-size: 3rem;
    font-weight: bold;
    cursor: pointer;
    transition: all 0.2s ease-out;
    box-shadow: 0 4px 0 rgba(0, 0, 0, 0.4);
    font-family: 'Fredoka', cursive;
}
#startRound {
background-color: var(--green-700);
    color: white;
    padding: 1rem 4rem;
    border: none;
    border-radius: 9999px;
    font-size: 2.5rem;
    font-weight: bold;
    cursor: pointer;
    transition: all 0.2s ease-out;
    box-shadow: 0 4px 0 rgba(0, 0, 0, 0.4);
    font-family: 'Fredoka', cursive;
    margin: 12px 0px;
}

    .startBtn:hover {
        background-color: var(--green-800);
        transform: translateY(-5px);
        box-shadow: 0 8px 0 rgba(0, 0, 0, 0.4);
    }

        .startBtn:active {
            transform: translateY(0);
            box-shadow: 0 4px 0 rgba(0, 0, 0, 0.4);
            background-color: var(--green-700);
        }

.categoryGrid {
    grid-area: categoryGrid;
    display: grid;
    grid-template-columns: repeat(2, 1fr);
    grid-template-rows: repeat(3, 1fr);
}

.categoryBtn {
    border: none;
    color: white;
    font-size: 2.25rem;
    font-weight: bold;
    cursor: pointer;
    transition: background-color 0.3s;
    padding: 2rem;
    font-family: 'Fredoka', cursive;
}

.universe {
    background-color: var(--player-blue-700);
}
.universe:hover {
    background-color: var(--player-blue-800);
}

.programming {
    background-color: var(--player-pink-700);
}
.programming:hover {
    background-color: var(--player-pink-800);
}

.music {
    background-color: var(--fuchsia-700);
}
.music:hover {
    background-color: var(--fuchsia-800);
}

.sport {
    background-color: var(--orange-700);
}
.sport:hover {
    background-color: var(--orange-800);
}

.animals {
    background-color: var(--green-700);
}
.animals:hover {
    background-color: var(--green-800);
}

.movies {
    background-color: var(--yellow-700);
}
.movies:hover {
    background-color: var(--yellow-800);
}

/* Active states for category buttons */
.categoryBtn:active {
    box-shadow: 0px 0px 10px inset var(--purple-800);
}

.universe:active {
    background-color: var(--player-blue-700);
}

.programming:active {
    background-color: var(--player-pink-700);
}

.music:active {
    background-color: var(--fuchsia-600);
}

.sport:active {
    background-color: var(--orange-700);
}

.animals:active {
    background-color: var(--green-700);
}

.movies:active {
    background-color: var(--yellow-700);
}



@media (max-width: 1024px) {

    .setupScreen {
        display: flex;
        flex-direction: column;
        grid-template-columns: 1fr;
        grid-template-rows: auto 1fr;
        grid-template-areas: 
            "setup"
            "categories";
    }
    .setupPanel {
        padding: 1.5rem;
    }
    .categoryGrid {
        min-height: 600px;
    }
} 










